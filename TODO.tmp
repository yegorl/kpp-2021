
#### Лекція 4: Керування
- Теми:
  - Цикли (while, for);
  - Галудження (if, break);
  - Виключення (try, catch).
- [Слайди](/slides/04-control/)

#### Лекція 6: Змінні
- Теми:
  - Область визначення;
  - Декларація змінних (var, let, const);
  - Вспливання змінних (hoisting).
- [Слайди](/slides/06-variables/)

#### Лекція 7: Функції
- Теми:
  - Функції;
  - Параметри і аргументи;
  - Функції вищого порядку (map, reduce);
  - Зворотні виклики (callbacks). Замикання.
- [Слайди](/slides/07-functions/)

#### Лекція 8: Масиви
- Теми:
  - Ітератори.
- [Слайди](/slides/08-arrays/)

#### Лекція 9: Об'єкти
- Теми:
  - Об'єкти;
  - Властивості;
  - this.
- [Слайди](/slides/09-objects/)

#### Лекція 10: Прототипи і Конструктори
- Теми:
  - prototype;
  - class.
- [Слайди](/slides/10-oop/)

#### Лекція 11: Обіцянки
- Теми:
  - Promise;
  - Ланцюжки;
  - Групування.
- [Слайди](/slides/11-promises)

#### Лекція 12: Генератори
- Теми:
  - Ітератори;
  - Генератори.
- [Слайди](/slides/12-generators)

#### Лекція 13: Асинхронність
- Теми:
  - Асинхронні функції;
  - Асинхронні ітератори;
  - koa.js.
- [Слайди](/slides/13-async)

#### Практика: Контроль версій
- Теми:
  - Системи контролю версій;
  - Git (init, commit);
  - Галудження (branch, checkout, reset, merge, rebase).
- [Слайди](/slides/s01-git/)

<section>
  <h2>Створення</h2>

  <section>
    <h3>JavaScript</h3>

    <p><b>Брендан Айк</b> розробив у Грудні 1995-го, для компанії <b>Netscape</b> мову програмування <i>Mocha</i>, пізніше <i>LiveScript</i>, і через деякий час нарешті <i>JavaScript</i>.</p>
  </section>

  <section>
    <h3>JScript</h3>

    <p><b>Microsoft</b> щоб уникнути проблем з торговою маркою, у Серпні 1996-го, створила <i>JScript</i>. Що частково відрізнявся від <i>JavaScript</i>.</p>
  </section>

  <section>
    <h3>ECMAScript</h3>

    <p><b>Netscape</b> у Лістопаді 1996-го почала процес стандартизаці, за допомогою компанії <i>Ecma International</i>. Новий стандарт <i>ECMA-262</i>, за згодою учасників, до складу яких приєднався згодом <b>Microsoft</b>, отримав назву <i>ECMAScript</i>.</p>
  </section>

  <section>
    <h3>TC39</h3>

    <p><b>Technical Committee 39</b> займається розробкою і розвитком стандарту <i>ECMAScript</i>.</p>
  </section>
</section>

<section>
  <h2>Розвиток</h2>

  <section>
    <h3>Ранні версії</h3>

    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>1</td><td>Червень 1997</td><td></td></tr>
        <tr><td>2</td><td>Червень 1998</td><td>Узгоджено зі стандартом ISO/IEC 16262</td></tr>
        <tr><td>3</td><td>Грудень 1999</td><td>Регулярні вирази, обробки винятків, додаткові можливості</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <h3>4-а версія</h3>

    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>4</td><td>не випущена</td><td>Класи, модулі, статична типізація, генератори, ітератори, деструктивне просвоєння, алгебраїчні типи даних</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <h3>5-а версія</h3>

    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>5</td><td>Грудень 2001</td><td>"strict mode", JSON, рефлексія, численні виправлення та прояснення</td></tr>
        <tr><td>5.1</td><td>Червень 2001</td><td>Узгоджено зі стандартом ISO/IEC 16262:2011</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <h3>Сучасні (Harmony)</h3>

    <table>
      <thead>
        <tr><th>Версія</th><th>Дата</th><th>Зміни</th></tr>
      </thead>

      <tbody>
        <tr><td>2015 (6)</td><td>Червень 2015</td><td>Класи, модулі, генератори, ітератори, деструктивне просвоєння, обіцянки, рефлексія, проксі</td></tr>
        <tr><td>2016</td><td>Червень 2016</td><td>Експонента **, Array.prototype.includes</td></tr>
        <tr><td>2017</td><td>Червень 2017</td><td>async/await, SIMD, метапрограмування</td></tr>
        <tr><td>2018</td><td>Червень 2018</td><td>rest/spread properties, асинхронна ітерація</td></tr>
        <tr><td>2019</td><td>Червень 2019</td><td>Array.flat, String.trimStart</td></tr>
      </tbody>
    </table>
  </section>
</section>

<section>
  <h2>Процесс</h2>

  <section>
    <h3>Пропозиції</h3>

    <a href="https://github.com/tc39/proposals">https://github.com/tc39/proposals</a>
  </section>

  <section>
    <h3>Етапи (Stages)</h3>

    <table>
      <thead>
        <tr><th>Етап</th><th>Назва</th><th>Очікування</th></tr>
      </thead>

      <tbody>
        <tr><td>0</td><td>Strawman</td><td></td></tr>
        <tr><td>1</td><td>Proposal</td><td>Поліфіли / демо</td></tr>
        <tr><td>2</td><td>Draft</td><td>Експериментальна реалізация</td></tr>
        <tr><td>3</td><td>Candidate</td><td>Узгоджено зі специфікацією</td></tr>
        <tr><td>4</td><td>Finished</td><td>Поставляється з частиною браузерів</td></tr>
      </tbody>
    </table>
  </section>
</section>

<section>
  <h2>Як використовувати нові можливості?</h2>

  <section>
    <h3>Поліфіли (polyfill)</h3>

    <p>Застосування власної або бібліотечної реалізації можливостей, що мали б бути в браузері.</p>

    <ul>
      <li>HTML5 Shiv - популярна бібліотека поліфілів</li>
      <li>modernizr - визначає яких фіч немає</li>
    </ul>
  </section>

  <section>
    <h3>Траспіляція (transpile)</h3>

    <p>Перетворення коду в код на іншій мові, одного рівня абстракції.</p>

    <ul>
      <li>Babel - популярний інструмент транспіляції JavaScript нової версії, в більш стару</li>
      <li>TypeScript - статично типізована мова схожа на JavaScript</li>
    </ul>
  </section>
</section>

